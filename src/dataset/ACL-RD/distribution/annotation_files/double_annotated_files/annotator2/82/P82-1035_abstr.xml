<?xml version="1.0" encoding="UTF-8" standalone="no"?><Paper acl-id="P82-1035">  <Title>Scruffy Text Understanding: Design and Implementation of 'Tolerant' Understanders</Title>  <Section>    <SectionTitle>ABSTRACT</SectionTitle>    <S>Most large <term class="tech">text-understanding systems</term> have been designed under the assumption that the <term class="other">input text</term> will be in reasonably neat form, e.g., <term class="other">newspaper stories</term> and other edited texts.</S>    <S>However, a great deal of <term class="other">natural language texts</term> e.g.,  memos, rough drafts, <term class="other">conversation transcripts</term> etc., have features that differ significantly from neat <term class="other">texts</term>, posing special problems for readers, such as misspelled <term class="other">words</term>, missing <term class="other">words</term>, poor <term class="other">syntactic construction</term>, missing periods, etc.</S>    <S>Our solution to these problems is to make use of <term class="other">expectations</term>, based both on knowledge of surface English and on <term class="other">world knowledge</term> of the situation being described.</S>    <S>These <term class="other">syntactic and semantic expectations</term> can be used to figure out unknown words from <term class="other">context</term>, constrain the possible <term class="other">word-senses</term> of <term class="other">words</term> with multiple <term class="other">meanings</term> (<term class="other">ambiguity</term>), fill in missing words (<term class="other">ellipsis</term>), and resolve <term class="other">referents</term> (<term class="other">anaphora</term>).</S>    <S>This method of using expectations to aid the understanding of scruffy <term class="other">texts</term> has been incorporated into a working computer program called <term class="tool">NOMAD</term>, which understands scruffy <term class="other">texts</term> in the <term class="other">domain</term> of Navy messages.</S>  </Section></Paper>