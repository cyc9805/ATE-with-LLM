<?xml version="1.0" encoding="UTF-8" standalone="no"?><Paper acl-id="E91-1012">  <Title>Non-deterministic Recursive Ascent Parsing</Title>  <Section>    <SectionTitle>ABSTRACT</SectionTitle>    <S>A purely functional implementation of <term class="tech">LR-parsers</term> is given, together with a simple <term class="other">correctness proof</term>.</S>    <S>It is presented as a <term class="other">generalization</term> of the <term class="tech">recursive descent parser</term>.</S>    <S>For <term class="tech">non-LR grammars</term> the <term class="other">time-complexity</term> of our <term class="tech">parser</term> is cubic if the <term class="other">functions</term> that constitute the <term class="tech">parser</term> are implemented as <term class="other">memo-functions</term>, i.e. <term class="other">functions</term> that memorize the results of previous invocations.</S>    <S>         <term class="other">Memo-functions</term> also facilitate a simple way to construct a very compact <term class="other">representation</term> of the <term class="other">parse forest</term>.</S>    <S>For <term class="other">LR(0) grammars</term>, our algorithm is closely related to the <term class="tech">recursive ascent parsers</term> recently discovered by Kruseman Aretz \[1\] and Roberts \[2\].</S>    <S>         <term class="other">Extended CF grammars</term> (<term class="other">grammars</term> with <term class="tech">regular expressions</term> at the right hand side) can be parsed with a simple modification of the <term class="tech">LR-parser</term> for <term class="other">normal CF grammars</term>.</S>	<!--ak corrected title, 16.11.15-->  </Section></Paper>