<?xml version="1.0" encoding="UTF-8" standalone="no"?><Paper acl-id="P97-1040">  <Title>Efficient Generation in Primitive Optimality Theory</Title>  <Section>    <SectionTitle>Abstract</SectionTitle>    <S>This paper introduces <term class="other">primitive Optimality Theory (OTP)</term>, a linguistically motivated formalization of <term class="other">OT</term>.</S>    <S>         <term class="other">OTP</term> specifies the class of <term class="tech">autosegmental representations</term>, the <term class="tech">universal generator Gen</term>, and the two simple families of <term class="model">permissible constraints</term>.</S>    <S>In contrast to less restricted theories using <term class="tech">Generalized Alignment</term>, <term class="other">OTP's</term> optimal <term class="other">surface forms</term> can be generated with <term class="tech">finite-state methods</term> adapted from (Ellison, 1994).</S>    <S>Unfortunately these methods take <term class="other">time</term> exponential on the size of the <term class="lr">grammar</term>.</S>    <S>Indeed the <term class="other">generation problem</term> is shown NP-complete in this sense.</S>    <S>However, techniques are discussed for making <term class="tech">Ellison's approach</term> fast in the typical case, including a simple trick that alone provides a <term class="other">100-fold speedup</term> on a <term class="lr">grammar fragment</term> of moderate size.</S>    <S>One avenue for future improvements is a new finite-state notion, <term class="tech">factored automata</term>, where <term class="tech">regular languages</term> are represented compactly via <term class="other">formal intersections</term> N~=IAi of <term class="tech">FSAs</term>.</S>	<!-- ak did NOT correct mathematical symbols, 20.11.15-->  </Section></Paper>